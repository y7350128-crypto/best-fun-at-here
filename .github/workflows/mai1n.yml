name: RDP-ExpressVPN-AutoReconnect

on:
  workflow_dispatch:

jobs:
  rdp-1:
    runs-on: windows-latest
    timeout-minutes: 3600

    steps:
      - name: Configure RDP
        run: |
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name "fDenyTSConnections" -Value 0 -Force
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -Name "UserAuthentication" -Value 0 -Force
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -Name "SecurityLayer" -Value 0 -Force
          netsh advfirewall firewall add rule name="RDP" dir=in action=allow protocol=TCP localport=3389
          Restart-Service -Name TermService -Force

      - name: Disable Password Requirements
        run: |
          secedit /export /cfg C:\secpol.cfg
          (Get-Content C:\secpol.cfg).replace("PasswordComplexity = 1", "PasswordComplexity = 0") | Out-File C:\secpol.cfg
          (Get-Content C:\secpol.cfg).replace("MinimumPasswordLength = 7", "MinimumPasswordLength = 0") | Out-File C:\secpol.cfg
          secedit /configure /db c:\windows\security\local.sdb /cfg C:\secpol.cfg /areas SECURITYPOLICY
          Remove-Item C:\secpol.cfg -Force
          Set-ItemProperty -Path 'HKLM:\SYSTEM\CurrentControlSet\Control\Lsa' -Name "LimitBlankPasswordUse" -Value 0 -Force

      - name: Install RDP Wrapper
        run: |
          $url = "https://github.com/stascorp/rdpwrap/releases/download/v1.6.2/RDPWrap-v1.6.2.zip"
          Invoke-WebRequest -Uri $url -OutFile "$env:TEMP\RDPWrap.zip" -UseBasicParsing
          Expand-Archive -Path "$env:TEMP\RDPWrap.zip" -DestinationPath "$env:TEMP\RDPWrap" -Force
          cd "$env:TEMP\RDPWrap"
          cmd /c install.bat
          Start-Sleep -Seconds 5
          Invoke-WebRequest -Uri "https://raw.githubusercontent.com/sebaxakerhtc/rdpwrap.ini/master/rdpwrap.ini" -OutFile "C:\Program Files\RDP Wrapper\rdpwrap.ini" -UseBasicParsing
          Restart-Service termservice -Force

      - name: Install Python and Dependencies
        run: |
          choco install python 7zip -y
          $env:Path = [System.Environment]::GetEnvironmentVariable("Path","Machine") + ";" + [System.Environment]::GetEnvironmentVariable("Path","User")
          pip install gdown

      - name: Download and Extract Both RARs
        run: |
          $env:Path = [System.Environment]::GetEnvironmentVariable("Path","Machine") + ";" + [System.Environment]::GetEnvironmentVariable("Path","User")
          
          gdown 1Dr9Z2ZHdmlUtB3nV2UBU1XbZpBmKSUQg -O "$env:TEMP\rar1.rar"
          gdown 1ZWucKt1fkguhHMhTN7KbuETtKCpeXWKc -O "$env:TEMP\rar2.rar"
          
          & "C:\Program Files\7-Zip\7z.exe" x "$env:TEMP\rar1.rar" -o"C:\Users" -y
          & "C:\Program Files\7-Zip\7z.exe" x "$env:TEMP\rar2.rar" -o"C:\Users" -y

      - name: Create 300 Users
        run: |
          for ($i = 1; $i -le 300; $i++) {
              net user User$i /add /passwordreq:no /expires:never /active:yes 2>$null
              net localgroup "Remote Desktop Users" User$i /add 2>$null
              net localgroup "Administrators" User$i /add 2>$null
              if ($i % 25 -eq 0) { Write-Host "Created $i users..." }
          }

      - name: Grant RDP Rights
        run: |
          secedit /export /cfg C:\secpol.cfg
          $content = Get-Content C:\secpol.cfg
          $newContent = @()
          foreach ($line in $content) {
              if ($line -like "SeRemoteInteractiveLogonRight*") {
                  $users = ""
                  for ($i = 1; $i -le 300; $i++) { $users += ",User$i" }
                  $line = $line + $users
              }
              $newContent += $line
          }
          $newContent | Out-File C:\secpol.cfg
          secedit /configure /db c:\windows\security\local.sdb /cfg C:\secpol.cfg /areas USER_RIGHTS
          Remove-Item C:\secpol.cfg -Force

      - name: Install Tailscale
        run: |
          Write-Host "Installing Tailscale..."
          Invoke-WebRequest -Uri "https://pkgs.tailscale.com/stable/tailscale-setup-1.82.0-amd64.msi" -OutFile "$env:TEMP\tailscale.msi"
          Start-Process msiexec.exe -ArgumentList "/i", "`"$env:TEMP\tailscale.msi`"", "/quiet", "/norestart" -Wait
          Start-Sleep -Seconds 10

      - name: Connect Tailscale
        run: |
          Write-Host "Connecting Tailscale..."
          & "$env:ProgramFiles\Tailscale\tailscale.exe" up --authkey=${{ secrets.TAILSCALE_AUTH_KEY }} --hostname=rdp1-$env:GITHUB_RUN_ID --accept-routes --accept-dns=false
          
          Start-Sleep -Seconds 10
          
          $tsIP = & "$env:ProgramFiles\Tailscale\tailscale.exe" ip -4
          if ($tsIP) {
              Write-Host "✓ Tailscale connected: $tsIP"
              echo "TAILSCALE_IP=$tsIP" >> $env:GITHUB_ENV
          } else {
              Write-Host "ERROR: Failed to get Tailscale IP"
              exit 1
          }

      - name: Create Tailscale Auto-Reconnect Service
        run: |
          # Create aggressive reconnect script
          $authKey = "${{ secrets.TAILSCALE_AUTH_KEY }}"
          $hostname = "rdp1-$env:GITHUB_RUN_ID"
          
          $reconnectScript = @'
$logFile = "C:\tailscale_monitor.log"

function Write-Log {
    param($Message)
    $timestamp = Get-Date -Format "yyyy-MM-dd HH:mm:ss"
    "$timestamp - $Message" | Out-File -FilePath $logFile -Append
    Write-Host "$timestamp - $Message"
}

Write-Log "Tailscale Monitor Started"

while ($true) {
    try {
        # Check if Tailscale is connected
        $tsIP = & "C:\Program Files\Tailscale\tailscale.exe" ip -4 2>$null
        
        if (-not $tsIP -or $tsIP -eq "") {
            Write-Log "Tailscale disconnected! Attempting reconnection..."
            
            # Try to reconnect
            & "C:\Program Files\Tailscale\tailscale.exe" up --authkey=$authKey --hostname=$hostname --accept-routes --accept-dns=false 2>&1 | Out-Null
            Start-Sleep -Seconds 10
            
            $tsIP = & "C:\Program Files\Tailscale\tailscale.exe" ip -4 2>$null
            if ($tsIP) {
                Write-Log "Successfully reconnected! IP: $tsIP"
            } else {
                Write-Log "Reconnection attempt failed, will retry..."
            }
        }
        
        # Check every 15 seconds
        Start-Sleep -Seconds 15
        
    } catch {
        Write-Log "Error in monitor loop: $_"
        Start-Sleep -Seconds 15
    }
}
'@
          $reconnectScript | Out-File -FilePath "C:\tailscale_monitor.ps1" -Encoding UTF8
          
          Write-Host "✓ Auto-reconnect script created"

      - name: Start Tailscale Monitor as Background Job
        run: |
          # Start monitor in background
          Start-Process powershell.exe -ArgumentList "-ExecutionPolicy Bypass -WindowStyle Hidden -File C:\tailscale_monitor.ps1"
          Start-Sleep -Seconds 5
          Write-Host "✓ Tailscale auto-reconnect monitor started"

      - name: Download ExpressVPN Installer
        run: |
          Write-Host "Downloading ExpressVPN installer..."
          $env:Path = [System.Environment]::GetEnvironmentVariable("Path","Machine") + ";" + [System.Environment]::GetEnvironmentVariable("Path","User")
          
          gdown 10cvIrCY7zD8brXVhcoWESKvpxeW1B1y0 -O "C:\Users\Public\Desktop\ExpressVPN_Installer.exe"
          Write-Host "✓ ExpressVPN installer on Desktop"

      - name: Create Installation Instructions
        run: |
          $instructions = @"
===========================================
HOW TO INSTALL EXPRESSVPN WITHOUT LOSING ACCESS
===========================================

IMPORTANT: Tailscale has an AUTO-RECONNECT monitor running!

INSTALLATION STEPS:
1. Double-click ExpressVPN_Installer.exe on Desktop
2. Your RDP connection WILL DISCONNECT during installation
3. Wait 60-90 seconds for installation to complete
4. Reconnect to the SAME Tailscale IP: $env:TAILSCALE_IP
5. The auto-reconnect script will restore connection automatically

WHAT'S RUNNING:
✓ Tailscale Monitor (checks connection every 15 seconds)
✓ Auto-reconnect on disconnect
✓ Log file: C:\tailscale_monitor.log

IF CONNECTION DOESN'T RESTORE:
1. Wait 2 minutes for auto-reconnect
2. Check C:\tailscale_monitor.log for status
3. Manual reconnect: Run as Admin:
   cd "C:\Program Files\Tailscale"
   .\tailscale.exe up --accept-routes --accept-dns=false

CURRENT TAILSCALE IP: $env:TAILSCALE_IP
(Save this IP to reconnect after ExpressVPN install)

===========================================
"@
          $instructions | Out-File -FilePath "C:\Users\Public\Desktop\INSTALL_EXPRESSVPN_INSTRUCTIONS.txt" -Encoding UTF8
          Write-Host "✓ Installation instructions created"

      - name: Keep Alive
        run: |
          Write-Host "========================================="
          Write-Host "RDP 1 READY FOR CONNECTION"
          Write-Host "========================================="
          Write-Host "Tailscale IP: $env:TAILSCALE_IP"
          Write-Host "Users: User1-User300"
          Write-Host "Password: NONE"
          Write-Host ""
          Write-Host "EXPRESSVPN INSTALLER: On Desktop"
          Write-Host "AUTO-RECONNECT: ACTIVE (checks every 15s)"
          Write-Host ""
          Write-Host "⚠ IMPORTANT:"
          Write-Host "When you install ExpressVPN, connection will drop"
          Write-Host "Wait 60-90 seconds, then reconnect to: $env:TAILSCALE_IP"
          Write-Host "Auto-reconnect will restore Tailscale automatically"
          Write-Host ""
          Write-Host "Read: INSTALL_EXPRESSVPN_INSTRUCTIONS.txt on Desktop"
          Write-Host "Monitor log: C:\tailscale_monitor.log"
          Write-Host "========================================="
          
          while ($true) { Start-Sleep -Seconds 300 }
